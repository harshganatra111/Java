import com.jogamp.opengl.GL2;
import com.jogamp.opengl.GLAutoDrawable;
import com.jogamp.opengl.GLCapabilities;
import com.jogamp.opengl.GLEventListener;
import com.jogamp.opengl.GLProfile;
import com.jogamp.opengl.awt.GLCanvas;
import com.jogamp.opengl.glu.GLU;
import javax.swing.JFrame;
public class Prism implements GLEventListener {
	int i=0;
public void init(GLAutoDrawable gld) {
GL2 gl = gld.getGL().getGL2();
glu = new GLU();
gl.glColor3f(1.0f, 0.0f, 0.5f);
gl.glViewport(-250, -150, 250, 150);
gl.glMatrixMode(GL2.GL_PROJECTION);
gl.glLoadIdentity();
glu.gluOrtho2D(-250.0, 250.0, -150.0, 150.0);
}
private GLU glu;
public void display (GLAutoDrawable arg)
{
GL2 gl=arg.getGL().getGL2();
gl.glClear(GL2.GL_COLOR_BUFFER_BIT);
gl.glPushMatrix();
for(i=0;i<170;i=i+1)
{
gl.glPopMatrix();
gl.glPushMatrix();
gl.glColor3f(1,0,1);
gl.glTranslatef(-i,-i,1);
drawtriangle(gl,i);
}
i=169;
gl.glPopMatrix();
gl.glPushMatrix();
gl.glColor3f(1,0,1);
drawtriangle(gl,i);
}
void drawtriangle(GL2 gl,int x)
{ 
gl.glBegin(GL2.GL_TRIANGLES);
if(x==0)
	gl.glColor3f(0.3f,.0f,0.5f);
else if(x==169)
	gl.glColor3f(1,1,1);
else
	gl.glColor3f(0,1,0);
gl.glVertex3f(75,120,0);
gl.glVertex3f(50,50,0);
gl.glVertex3f(150,50,0);
gl.glEnd();
}
public void reshape(GLAutoDrawable arg0, int arg1, int arg2, int arg3,
int arg4) {
}
public void dispose(GLAutoDrawable arg0) {
}
	public static void main(String[] args) {
	final GLProfile profile = GLProfile.get(GLProfile.GL2);
	GLCapabilities capabilities = new GLCapabilities(profile);
	final GLCanvas glcanvas = new GLCanvas(capabilities);
	Prism b = new Prism();
	glcanvas.addGLEventListener(b);
	glcanvas.setSize(800, 400);
	final JFrame frame = new JFrame("Basic Frame");
	frame.add(glcanvas);
	frame.setSize(720, 720);
	frame.setVisible(true);	
	}
}